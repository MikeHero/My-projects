Mihai Ghioca 321CB Etapa 2

Task 2.1:
	Fac o functie auxiliara care imi determina indexul coloanei precizate dintr-o
lista de Stringuri.Se va aplica pe un rand al tabelului.Pentru a accesa valoare de 
pe campul respectiv merg pe linia si aplic !! de index.Am construit functia
comparator, iar apoi se aplica insertSortBy precum la Etapa 1.
Task 2.2:
	Avem o functie auxiliara care verifica daca coincid coloanele.Daca nu, intorc
primul tabel, altfel se concateneaza tabelele ( cu omiterea primei linii din
tabelulu 2).
Task 2.3:
	Se calculeaza numarul de linii si de coloane ale fiecarui tabel prin functii
auxiliare.Se calculeaza diferentele intre numerele de coloane, respectiv de linii.
Se trateaza cazul mentionat in care exista o diferenta intre numarul de linii.Daca
am gasit diferenta intre numarul de linii, avem doua cazuri, fie tabelul 1 are mai 
multe linii, fie viceversa.Daca tabelul 1 are mai multe linii decat tabelul 2, 
tabelul 2 se va extinde.Se poate folosi functia replicate pentru a obtine 
paddingul.Primul apel imi creeaza o linie, iar al doilea apel imi repeta acea linie 
pentru a se ajunge la dimensiunea dorita.Analog pentru cazul in care tabelul 1 are 
mai putine linii decat tabelul 2.In final, tabelele de un numar egal de linii se 
pot concatena.
Task 2.4:
	Daca pe o coloana specificata din primul tabel regasim aceeasi valoare ca pe aceeasi
coloana specificata din al doilea tabel, se va executa operatia de merge.Se va realiza un
triaj, pentru ca pentru a putea returna merge trebuie sa avem aceeasi valoare pe coloana
mentionata in ambele tabele.Deci, in intoarcerea rezultatului operatiei de merge, daca nu 
au aceeasi valoare pe coloane, nu este nevoie sa facem merge.Din tabelul 2, se face 
ovverride valorii din tabelul 1, cand vom face merge, deci ca sa putem aplica merge, 
trebuie ca linia cu coloana din tabel2 (unde are loc egalitatea) sa se regaseasca in 
tabel 1.Daca nu se regaseste, o putem desconsidera, eliminand-o din tabel.
	Se vor prelucra tabelul 1, astfel incat sa ramana doar liniile care sigur vor face
merge cu omologul lor din tabelul2.Dupa acest triaj, aplicam functia auxiliara de merge.
In caz de acelasi nume al coloanei, facem ovveride cu valoarea din t2, daca nu este "",
altfel adaugam coloana diferita din t2 lui t1, cu valoarea ei.
Task 2.5:
	Se aplica functia_auxiliara cu un rand cu fiecare linie din al doilea tabel, aplicand
functia primita ca parametru.Apoi realizez acest procedeu pentru fiecare linie din t1,
folosind un map.Se sustrage capul de tabel din primul tabel, din al doilea.Se intoarce
rezultatul adaugand noul cap de tabel primit ca parametru.
Task 2.6:
	Se transpune tabelul.Se verifica daca head row (pentru fiecare rand), este in
lista de coloane de extras.Se pastreaza (dupa transpunere) doar acele linii al caror
head se regaseste in lista primita ca parametru.Cu scopul de a reveni la forma initiala 
a tabelului, inainte de traspunere, retranspunem.
Task 2.7:
	Se vor folosii functiile auxiliare care vor determina indicele coloanei pe baza
careia aplic functia de filtrare.Apoi se va folosi filter pe fiecare rand din tabel
exact la indicele calculat prin functia auxiliara
